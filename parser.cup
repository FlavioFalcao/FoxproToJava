package translator;

import java_cup.runtime.*;
import java.io.FileInputStream;
import java.io.InputStream;

parser code 
{:

	public Node root = null;

	public static parser getParser(String pPath) throws Exception {
		InputStream is = null;
		is = new FileInputStream(pPath);

		return new parser(new Yylex(is));
	}

	public Node getTree() throws Exception {
		if (root == null) {
			this.parse();
		}
		return root;
	}

	public static void main(String args[]) throws Exception {
		new parser(new Yylex(System.in)).parse();
	}

:}

terminal IF, ELSE, ENDIF;
terminal GE, LE, GT, LT, UNEQ, EQUAL, ASSIGN;
terminal ADD, MINUS, MULTI, DIV;
terminal LC, RC, LPAR, RPAR;
terminal Integer INTCONST;
terminal Double RATIONAL;
terminal String IDE;

non terminal if_else_statement;
non terminal if_statement;
non terminal assignment;
non terminal expr;

start with program;

if_else_statement	::= IF expr (expr)+ ELSE (expr)+ ENDIF
if_statement 		::= IF expr (expr)+ ENDIF
assignment 			::= IDE ASSIGN expr
expr 				::= expr EQUAL expr
						|expr GE expr
						|expr LE expr
						|expr GT expr
						|expr LT expr
						|expr ADD expr
						|expr MINUS expr
						|expr MULTI expr
						|expr DIV expr
						|LPAR expr RPAR
						|INTCONST
						|RATIONAL
					
