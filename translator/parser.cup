package translator;

import java_cup.runtime.*;
import java.io.FileInputStream;
import java.io.InputStream;

parser code 
{:

	public Node root = null;

	public static parser getParser(String pPath) throws Exception {
		InputStream is = null;
		is = new FileInputStream(pPath);

		return new parser(new Yylex(is));
	}

	public Node getTree() throws Exception {
		if (root == null) {
			this.parse();
		}
		return root;
	}

	public static void main(String args[]) throws Exception {
		new parser(new Yylex(System.in)).parse();
	}

:}

terminal IF, ELSE, ENDIF;
terminal GE, LE, GT, LT, UNEQ, EQUAL, ASSIGN;
terminal ADD, MINUS, MULTI, DIV;
/**
 *terminal LPAR, RPAR;
 *terminal LC, RC;
 */
terminal Integer INTCONST;
terminal Double RATIONAL;
terminal String IDE;

non terminal program;
non terminal if_else_statement;
non terminal if_statement;
non terminal assignment;
non terminal exas;
non terminal expr;
non terminal term;
non terminal op;

precedence nonassoc ASSIGN;
precedence nonassoc LE, LT, EQUAL, UNEQ, GE, GT;
precedence left ADD, MINUS;
precedence left MULTI, DIV;

start with program;
program				::= if_statement:is					{: System.out.println("if_statement"); :}
						|if_else_statement:ies			{: System.out.println("if_else_statement"); :};
if_else_statement	::= IF expr:e1 exas:ea1 ELSE exas:ea2 ENDIF	{: System.out.println("if_else_statement2"); :};
if_statement 		::= IF expr:e1 exas:ea ENDIF		{: System.out.println("if_statement2"); :};
exas				::= expr:ex							{: System.out.println("exexpr"); :}
						|assignment:as					{: System.out.println("exassignment"); :};
assignment 			::= IDE:i ASSIGN expr:e1s			{: System.out.println("assignment"); :};
expr 				::= expr:e1 op term:t1				{: System.out.println("operation"); :};
						/**
						 *|LPAR expr:e1 RPAR				{: System.out.println("(expr)"); :}
						 */
op					::= ADD|MINUS|MULTI|DIV|EQUAL|GE|UNEQ|LE|GT|LT;
term 				::= INTCONST:intconst				{: System.out.println("constant"); :}
						|RATIONAL:rational				{: System.out.println("rational"); :}
						|IDE:i							{: System.out.println("name"); :};